<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- 
		Creates the UCADF-Core package files.
		Run: mvn -U clean deploy
	-->
	<name>UCADF-Core-Library</name>
	<groupId>org.urbancode.ucadf.core</groupId>
	<artifactId>UCADF-Core-Library</artifactId>
	<version>1.0.0</version>

	<url>http://maven.apache.org</url>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<junit-version>5.0.0</junit-version>
		<jersey-version>2.22.2</jersey-version>
		<jackson-databind-version>2.10.0</jackson-databind-version>
	</properties>

    <!-- Configuration required to deploy artifacts to a Maven repository. -->
	<distributionManagement>
		<repository>
			<id>${MVN_REPO_ID}</id>
			<name>${MVN_REPO_NAME}</name>
			<url>${MVN_REPO_URL}</url>
		</repository>
		<snapshotRepository>
			<id>${MVN_REPO_ID}</id>
			<name>${MVN_REPO_NAME}</name>
			<url>${MVN_REPO_URL}</url>
		</snapshotRepository>
	</distributionManagement>

	<build> 
		<sourceDirectory>src/main/groovy</sourceDirectory>
		<testSourceDirectory>src/test/groovy</testSourceDirectory>
		<plugins>
			<!-- Eclipse plugin for Groovy source files. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.eclipse.jdt.groovy.core.groovyNature</projectnature>
					</additionalProjectnatures>
					<sourceIncludes>
						<sourceIncludes>**/*.groovy</sourceIncludes>
					</sourceIncludes>
				</configuration>
			</plugin>
			
			<!-- Set a Java compiler level. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			
             <!-- Ant plugin. -->
			<plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
             		<!-- Groovy compiler via Ant plugin to compile main. -->
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="${basedir}/src/main/groovy"/>
                                <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc">
                                    <classpath refid="maven.compile.classpath"/>
                                </taskdef>
                                <mkdir dir="${project.build.outputDirectory}"/>
                                <groovyc destdir="${project.build.outputDirectory}" srcdir="${basedir}/src/main/groovy/" listfiles="true">
                                    <classpath refid="maven.compile.classpath"/>
                                </groovyc>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    
             		<!-- Groovy compiler via Ant plugin to compile test. -->
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="${basedir}/src/test/groovy"/>
                                <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc">
                                    <classpath refid="maven.test.classpath"/>
                                </taskdef>
                                <mkdir dir="${project.build.testOutputDirectory}"/>
                                <groovyc destdir="${project.build.testOutputDirectory}" srcdir="${basedir}/src/test/groovy/" listfiles="true">
                                    <classpath refid="maven.test.classpath"/>
                                </groovyc>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    
					<!-- Copy files to the UCADF package directories. -->            
                    <execution>
                        <id>copy-to-package</id>
                        <phase>install</phase>
                        <configuration>
                            <tasks>
                            	<!-- Copy the Jar to the package directory. -->
								<delete dir="${basedir}/UCADF-Package/Library" includeemptydirs="true"/>
                                <mkdir dir="${basedir}/UCADF-Package/Library"/>
								<copy todir="${basedir}/UCADF-Package/Library">
								    <fileset dir="${project.build.directory}">
								        <include name="${project.artifactId}.jar"/>
								    </fileset>
								    <fileset dir="${basedir}/src/main/resources">
								        <include name="**/*"/>
								    </fileset>
								</copy>
								
                            	<!-- Copy the test Jar to the package test directory. -->
								<delete dir="${basedir}/UCADF-Package-Test/Library" includeemptydirs="true"/>
                                <mkdir dir="${basedir}/UCADF-Package-Test/Library"/>
								<copy todir="${basedir}/UCADF-Package-Test/Library">
								    <fileset dir="${project.build.directory}">
								        <include name="${project.artifactId}-tests.jar"/>
								    </fileset>
								</copy>                                
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
               </executions>
            </plugin>

			<!-- Generate JavaDoc -->
			<plugin>
			  <groupId>com.bluetrainsoftware.maven</groupId>
			  <artifactId>groovydoc-maven-plugin</artifactId>
			  <version>2.1</version>
			  <executions>
			    <execution>
			      <id>attach-docs</id>
			      <phase>package</phase>
			      <goals>
			        <goal>attach-docs</goal>
			      </goals>
			    </execution>
			  </executions>
			</plugin>			
							
            <!-- Create test jar. -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
					<executions>
						<execution>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
            </plugin>

			<!-- Copy all Maven dependencies into the dependencies folder. --> 
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Use shade plugin to create jar with all dependencies. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<finalName>${project.artifactId}</finalName>
					<transformers>
						<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<mainClass>org.urbancode.ucadf.core.client.UcAdfClient</mainClass>
						</transformer>
					</transformers>
              	</configuration>
				<executions>
				  <execution>
					<phase>package</phase>
					<goals>
						<goal>shade</goal>
					</goals>
				  </execution>
				</executions>
			</plugin>
			  
  			<!-- Install to repository plugin. Tied to install phase. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.3.1</version>
            </plugin>

            <!-- Skip testing phase since all testing is currently done by execution of by running action files with an online UrbanCode instance. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <!-- Plugin that deploys to a Maven repository. Tied to deploy phase. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8</version>
			</plugin>
		</plugins>
	</build>

	<!-- Exclude Commons Logging in favor of SLF4j. -->
	<dependencies>
		<!-- Groovy library dependency -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.4.8</version>
		</dependency>
		
		<!-- Junit 5 dependencies. -->
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-api</artifactId>
		    <version>${junit-version}</version>
		</dependency>
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-params</artifactId>
		    <version>${junit-version}</version>
		</dependency>
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-migrationsupport</artifactId>
		    <version>${junit-version}</version>
		</dependency>
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-engine</artifactId>
		    <version>${junit-version}</version>
		</dependency>
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-launcher</artifactId>
		    <version>1.4.0</version>
		</dependency>

		<!-- SLF4j Dependencies. -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.30</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-api</artifactId>
		    <version>2.11.2</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>2.11.2</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-slf4j-impl</artifactId>
		    <version>2.11.2</version>
		</dependency>

		<!--  Command line library used by command line client. -->	    
		<dependency>
		    <groupId>commons-cli</groupId>
		    <artifactId>commons-cli</artifactId>
		    <version>1.4</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Jersey dependencies. -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		
	    <dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>2.26</version>
		</dependency>
		
	    <dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		
		<!-- Jackson dependencies. Had to force later dependency versions to avoid vulnerable versions. -->
	    <dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.9.0</version>
		</dependency>
		
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>${jackson-databind-version}</version>
		</dependency>
		
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>${jackson-databind-version}</version>
		</dependency>

		<!--  Java mail dependency. -->		
	    <dependency>
		    <groupId>com.sun.mail</groupId>
		    <artifactId>javax.mail</artifactId>
		    <version>1.6.2</version>
   			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Snake YAML parser. -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.24</version>
        </dependency>

		<!-- Must include these dependencies for Java 9 and beyond. -->
		<dependency>
		    <groupId>com.sun.xml.bind</groupId>
		    <artifactId>jaxb-core</artifactId>
		    <version>2.3.0.1</version>
		</dependency>
		<dependency>
		    <groupId>javax.xml.bind</groupId>
		    <artifactId>jaxb-api</artifactId>
		    <version>2.3.1</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.xml.bind</groupId>
		    <artifactId>jaxb-impl</artifactId>
		    <version>2.3.1</version>
		</dependency>

		<!-- Used by UcdAddVersionFiles to do Ant-style pattern matching. -->        
		<dependency>
		    <groupId>io.github.azagniotov</groupId>
		    <artifactId>ant-style-path-matcher</artifactId>
		    <version>1.0.0</version>
		</dependency>
	</dependencies>
</project>
