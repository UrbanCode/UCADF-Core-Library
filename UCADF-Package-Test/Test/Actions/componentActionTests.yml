# ===============================================================================
# This actions file runs component action tests.
# ===============================================================================
propertyFiles:
  - fileName: "UCADF-Package-Test/Test/UcAdfCoreTestProperties.yml"
  - fileName: "${u:UCADF_STORE}/Instances/${u:ucAdfInstance}/instance.properties"
  - fileName: "${u:UCADF_STORE}/Instances/${u:ucAdfInstance}/instance.secure.properties"
  
actions:
  #==============================================================================          
  # Run the tests.
  #==============================================================================          
  # Get a value to use for a unique tag name.
  - action: UcAdfSetActionProperties
    propertyValues:
      epoch: 'Eval(new Date().getTime())'
    
  - action: UcAdfSetActionProperties
    propertyValues:
     componentTag: "${u:coreTestCompTagPrefix}-${u:epoch}"
      
  # Create a component.
  # Try to create twice to make sure it works if it already exists.
  - action: UcAdfCounterLoop
    actionInfo: false
    counterBegin: 1 
    counterEnd: 2 
    actions:
      - action: UcdCreateComponent
        name: "${u:coreTestComp1}"
        description: "Test component."
        failIfExists: false
    
  # Add team security to a specified component.
  - action: UcdAddComponentToTeams
    component: "${u:coreTestComp1}"
    teams:
      - team: "${u:coreTestTeam1}"
    removeOthers: true
    
  # Get the component.
  - action: UcdGetComponent
    component: "${u:coreTestComp1}"
  - action: UcAdfComment
    actionInfo: false
    comment: "Component %s"
    values:
      - ${u:actionReturn}
  
  # Create a component.
  - action: UcdCreateComponent
    name: "${u:coreTestComp2}"
    description: "Test component."
    failIfExists: false
    
  # Get the list of components.
  - action: UcdGetComponents
    actionReturnPropertyName: components
  - action: UcAdfItemsLoop
    actionInfo: false
    items: ${u:components}
    actions:
      - action: UcAdfComment
        actionInfo: false
        comment: "Component %s"
        values:
          - ${u:item}

  # Create a component to delete.
  - action: UcdCreateComponent
    name: "${u:coreTestCompDelete}"
    description: "Test component."
    failIfExists: false
    
   # Export a component to a file.
  - action: UcdExportComponent
    component: "${u:coreTestCompDelete}"
    fileName: "temp/${u:coreTestCompDelete}.json"

 # Delete a component.
  - action: UcdDeleteComponent
    component: "${u:coreTestCompDelete}"
    failIfNotFound: true
    
 # Import a component.
  - action: UcdImportComponent
    fileName: "temp/${u:coreTestCompDelete}.json"
    compTempUpgradeType: "UPGRADE_IF_EXISTS"
    genProcessUpgradeType: "UPGRADE_IF_EXISTS"
    
  # Create a component tag.
  # Try to create twice to make sure it works if it already exists.
  - action: UcAdfCounterLoop
    actionInfo: false
    counterBegin: 1 
    counterEnd: 2 
    actions:
      - action: UcdCreateComponentTag
        name: "${u:componentTag}"
        color: "RED"
        description: "Test component tag."
        component: "${u:coreTestComp1}"
        failIfExists: false
    
  # Get information about a component tag.
  - action: UcdGetComponentTag
    tag: "${u:componentTag}"
    failIfNotFound: true
    
  # Add a tag to a component.  
  - action: UcdAddTagsToComponent
    component: "${u:coreTestComp1}"
    tags:
      - "${u:componentTag}"

  # Get components with the specified tag.
  - action: UcdGetComponents
    tag: "${u:componentTag}"
    actionReturnPropertyName: taggedComponents
  - action: UcAdfItemsLoop
    actionInfo: false
    items: ${u:taggedComponents}
    actions:
      - action: UcAdfComment
        actionInfo: false
        comment: "Tagged component %s"
        values:
          - ${u:item}
       
  # Get the tags on the specified component.
  - action: UcdGetTagsOnComponent
    component: "${u:coreTestComp1}"
    actionReturnPropertyName: componentTags
  - action: UcAdfItemsLoop
    actionInfo: false
    items: ${u:componentTags}
    actions:
      - action: UcAdfComment
        actionInfo: false
        comment: "Component has tag %s"
        values:
          - ${u:item}
       
  # Remove the specified tag from the specified component.
  - action: UcdRemoveTagsFromComponent  
    component: "${u:coreTestComp1}"
    tags:
      - "${u:componentTag}"
      
  # Set component properties.
  - action: UcdSetComponentProperties
    component: "${u:coreTestComp1}"
    properties:
      - name: "${u:coreTestProperty1}"
        value: "${u:coreTestProperty1}-Value"
      - name: "${u:coreTestProperty1}-Secure"
        value: "${u:coreTestProperty1}-Value"
        secure: true
    
  # Get component property.
  - action: UcdGetComponentProperty
    component: "${u:coreTestComp1}"
    property: "${u:coreTestProperty1}"
    actionReturnPropertyName: componentProperty
  - action: UcAdfComment
    actionInfo: false
    comment: "Component property %s"
    values:
      - ${u:componentProperty}
  - action: UcAdfThrowException
    when: '!"${u:componentProperty/value}".equals("${u:coreTestProperty1}-Value")'
    message: "Invalid property value."
    
  # Get secure component property.
  - action: UcdGetComponentProperty
    component: "${u:coreTestComp1}"
    property: "${u:coreTestProperty1}-Secure"
    actionReturnPropertyName: componentProperty
  - action: UcAdfComment
    actionInfo: false
    comment: "Component property %s"
    values:
      - ${u:componentProperty}
  - action: UcAdfThrowException
    when: '!"${u:componentProperty/value}".equals("****")'
    message: "Invalid property value."
    
  # Get component properties.
  - action: UcdGetComponentProperties
    component: "${u:coreTestComp1}"
    actionReturnPropertyName: componentProperties
  - action: UcAdfItemsLoop
    actionInfo: false
    items: ${u:componentProperties}
    actions:
      - action: UcAdfComment
        actionInfo: false
        comment: "Component property %s"
        values:
          - ${u:item}

  # Get information about the component.
  - action: UcdGetComponent
    component: "${u:coreTestComp1}"
    actionReturnPropertyName: "component"
  - action: UcAdfComment
    actionInfo: false
    comment: "Component first team [%s]."
    values:
      - "${u:component/extendedSecurity}"
#      - "${u:component/extendedSecurity/teams/0/teamLabel}"
  - action: UcAdfComment
    actionInfo: false
    comment: "Component first team [%s]."
    values:
      - "${u:component/extendedSecurity/teams/0}"
  - action: UcAdfComment
    actionInfo: false
    comment: "Component first team [%s]."
    values:
      - "${u:component/extendedSecurity/teams/0/teamName}"
      
  # Remove team security from a specified component.
  - action: UcdRemoveComponentFromTeams
    component: "${u:coreTestComp1}"
    teams:
      - team: "${u:coreTestTeam1}"
    
  # Get the component applications.
  - action: UcdGetComponentApplications
    component: "${u:coreTestCompDelete}"
